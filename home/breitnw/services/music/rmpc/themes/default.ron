#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
(
  components: {
    // left
    "volume": Pane(Property(
        content: [
          (kind: Text("Volume: "), style: (fg: "magenta")),
          (kind: Property(Status(Volume)), style: (fg: "magenta")),
          (kind: Text("%"), style: (fg: "magenta")),
        ], align: Left,
      )),
    "state": Pane(Property(
        content: [
          (
            kind: Property(Status(StateV2(
                  playing_label: " ",
                  paused_label: " ",
                  stopped_label: " ",
                ))),
            style: (fg: "gray")
          ),
          (kind: Property(Status(Elapsed))),
          (kind: Text(" / ")),
          (kind: Property(Status(Duration))),
        ], align: Left
      )),

    // center
    "title": Pane(Property(
        content: [
          (kind: Property(Song(Title)), style: (fg: "green", modifiers: "Bold"),
            default: (kind: Text("No Song"), style: (modifiers: "Bold")))
        ], align: Center, scroll_speed: 1
      )),
    "album-and-artist": Pane(Property(
        content: [
          (kind: Property(Song(Artist)), style: (fg: "magenta", modifiers: "Bold"),
            default: (kind: Text("Unknown"), style: (fg: "magenta", modifiers: "Bold"))
          ),
          (kind: Text(" - ")),
          (kind: Property(Song(Album)),
            default: (kind: Text("Unknown Album"))
          )
        ], align: Center, scroll_speed: 1
      )),

    // right
    "controls": Pane(Property(
        content: [
          (
            kind: Property(Status(RepeatV2(
              on_label: " 🔁",
              on_style: (fg: "gray"),
              off_label: " 🔁",
              off_style: (fg: "dark_gray"),
            ))),
            style: (fg: "dark_gray")
          ),
          (
            kind: Property(Status(RandomV2(
              on_label: " 🔀",
              on_style: (fg: "gray"),
              off_label: " 🔀",
              off_style: (fg: "dark_gray"),
            ))),
            style: (fg: "dark_gray")
          ),
          (
            kind: Property(Status(SingleV2(
              oneshot_label: " 🔂",
              oneshot_style: (fg: "magenta"),
              on_label: " 🔂",
              on_style: (fg: "gray"),
              off_label: " 🔂",
              off_style: (fg: "dark_gray"),
            ))),
            style: (fg: "dark_gray")
          ),
          (
            kind: Property(Status(ConsumeV2(
              oneshot_label: " 💩",
              oneshot_style: (fg: "magenta"),
              on_label: " 💩",
              on_style: (fg: "gray"),
              off_label: " 💩",
              off_style: (fg: "dark_gray"),
            ))),
            style: (fg: "dark_gray")
          ),
        ], align: Right
      )),

    // header sections
    "header-left": Split(
      direction: Vertical,
      panes: [
        (size: "1", pane: Component("volume")),
        (size: "1", pane: Component("state")),
      ]
    ),
    "header-center": Split(
      direction: Vertical,
      panes: [
        (size: "1", pane: Component("title")),
        (size: "1", pane: Component("album-and-artist")),
      ]
    ),
    "header-right": Split(
      direction: Vertical,
      panes: [
        (size: "1", pane: Component("controls")),
      ]
    ),
    "header": Split(
      direction: Horizontal,
      panes: [
        (size: "15", pane: Component("header-left")),
        (size: "100%", pane: Component("header-center")),
        (size: "15", pane: Component("header-right")),
      ],
    ),
  },
  layout: Split(
    direction: Vertical,
    panes: [
      (
        size: "2",
        pane: Pane(Tabs),
      ),
      (
        size: "100%",
        pane: Split(
          direction: Horizontal,
          panes: [
            (
              size: "100%",
              borders: "NONE",
              pane: Pane(TabContent),
            ),
          ]
        ),
      ),
      (
        size: "6",
        borders: "ALL",
        pane: Split(
          direction: Horizontal,
          panes: [
            // spacer
            (
              size: "1",
              pane: Pane(Property(content: [(kind: Text(" "))])),
            ),
            // album art
            (
              size: "10",
              pane: Pane(AlbumArt),
            ),
            // player data
            (
              size: "100%",
              pane: Split(
                direction: Vertical,
                panes: [
                  (
                    size: "5",
                    pane: Component("header")
                    // pane: Pane(Header),
                  ),
                  (
                    size: "1",
                    pane: Pane(ProgressBar),
                  ),
                ]
              )
            ),
            // spacer
            (
              size: "1",
              pane: Pane(Property(content: [(kind: Text(" "))])),
            ),
          ]
        )
      ),
    ],
  ),

  default_album_art_path: None,
  show_song_table_header: true,
  draw_borders: false,
  browser_column_widths: [20, 38, 42],
  background_color: None,
  text_color: None,
  header_background_color: None,
  modal_background_color: None,
  tab_bar: (
    active_style: (fg: "black", bg: "blue", modifiers: "Bold"),
    inactive_style: (fg: "dark_gray"),
  ),
  highlighted_item_style: (fg: "blue", modifiers: "Bold"),
  current_item_style: (fg: "black", bg: "blue", modifiers: "Bold"),
  borders_style: (fg: "dark_gray"),
  highlight_border_style: (fg: "blue"),
  symbols: (song: "📀", dir: "📁", marker: " "),
  progress_bar: (
    symbols: ["━", "○", "┈"],
    track_style: (fg: "dark_gray"),
    elapsed_style: (fg: "magenta"),
    thumb_style: (fg: "magenta"),
  ),
  scrollbar: (
    symbols: ["│", "█", "▲", "▼"],
    track_style: (fg: "dark_gray"),
    ends_style: (fg: "dark_gray"),
    thumb_style: (fg: "dark_gray"),
  ),
  song_table_format: [
    (
      prop: (
        kind: Sticker("favorited"),
        default: (kind: Text(" ")),
        style: (fg: "yellow")
      ),
      width: "1",
    ),
    (
      prop: (kind: Property(Artist), style: (fg: "dark_gray"),
        default: (kind: Text("Unknown"), style: (fg: "red"))
      ),
      width_percent: 20,
    ),
    (
      prop: (kind: Property(Title), style: (fg: "gray"),
        default: (kind: Text("Unknown"), style: (fg: "red"))
      ),
      width_percent: 35,
    ),
    (
      prop: (kind: Property(Album), style: (fg: "dark_gray"),
        default: (kind: Text("Unknown Album"), style: (fg: "red"))
      ),
      width_percent: 20,
    ),
    (
      prop: (kind: Property(Duration), style: (fg: "dark_gray"),
        default: (kind: Text("-"))
      ),
      width_percent: 15,
      alignment: Right,
    ),
  ],
  // header is configured with the "header" component
  header: (rows: [ ]),
  browser_song_format: [
    (
      kind: Group([
          (kind: Property(Track)),
          (kind: Text(" ")),
        ])
    ),
    (
      kind: Property(Title),
      default: (kind: Property(Filename))
    ),
  ],
)
